version: '3'

tasks:
  publisher:
    desc: Start the temperature publisher
    dir: publisher
    deps: [deps-publisher]
    cmds:
      - go run publisher.go

  server:
    desc: Start the HTTP server
    dir: server
    deps: [deps-server]
    cmds:
      - go run server.go

  temperature:
    desc: Start the temperature microservice
    dir: temperature-microservice
    cmds:
      - NATS_URL=tls://connect.ngs.global NATS_CREDS=../credentials/NGS-Premium-CLI.creds go run temperature-service.go

  temperature-debug:
    desc: Debug the temperature microservice with delve
    dir: temperature-microservice
    cmds:
      - NATS_URL=tls://connect.ngs.global NATS_CREDS=../credentials/NGS-Premium-CLI.creds dlv debug temperature-service.go

  http-temperature:
    desc: Start the HTTP temperature microservice
    dir: temperature-microservice
    cmds:
      - NATS_URL=tls://connect.ngs.global NATS_CREDS=../credentials/NGS-Premium-CLI.creds go run http-temperature-client.go

  python-temperature:
    desc: Start the Python temperature microservice
    dir: temperature-microservice
    cmds:
      - NATS_URL=tls://connect.ngs.global NATS_CREDS=../credentials/NGS-Premium-CLI.creds python3 temperature_service.py

  server-ngrok:
    desc: Run server and ngrok simultaneously
    deps: [deps-server]
    cmds:
      - |
        echo "Starting server and ngrok..."
        echo "Server will run on: http://localhost:8080"
        echo "Ngrok will expose the server publicly"
        echo ""
        # Run server and ngrok in parallel
        (cd server && go run server.go) &
        SERVER_PID=$!
        ngrok http 8080 &
        NGROK_PID=$!
        
        # Wait for any process to exit
        wait $SERVER_PID $NGROK_PID
        
        # Kill remaining processes on exit
        trap "kill $SERVER_PID $NGROK_PID 2>/dev/null" EXIT

  all:
    desc: Run publisher, server, and ngrok simultaneously
    deps: [deps-publisher, deps-server]
    cmds:
      - task: run-all-parallel

  run-all-parallel:
    desc: Internal task to run services in parallel
    deps: []
    cmds:
      - |
        echo "Starting all services..."
        echo "Server will run on: http://localhost:8080"
        echo "Ngrok will expose the server publicly"
        echo ""
        # Run all services in parallel
        (cd server && go run server.go) &
        SERVER_PID=$!
        (cd publisher && go run publisher.go) &
        PUBLISHER_PID=$!
        ngrok http 8080 &
        NGROK_PID=$!
        
        # Wait for any process to exit
        wait $SERVER_PID $PUBLISHER_PID $NGROK_PID
        
        # Kill remaining processes on exit
        trap "kill $SERVER_PID $PUBLISHER_PID $NGROK_PID 2>/dev/null" EXIT

  deps-publisher:
    desc: Install publisher dependencies
    dir: publisher
    cmds:
      - go mod download
      - go mod tidy
    sources:
      - publisher/go.mod
      - publisher/go.sum
    generates:
      - publisher/go.sum
    method: checksum

  deps-server:
    desc: Install server dependencies  
    dir: server
    cmds:
      - |
        if [ ! -f go.mod ]; then
          go mod init server
        fi
      - go mod download
      - go mod tidy
    sources:
      - server/go.mod
      - server/go.sum
    generates:
      - server/go.sum
    method: checksum

  deps:
    desc: Install all dependencies
    cmds:
      - task: deps-publisher
      - task: deps-server

  nats-context:
    desc: Set up NATS context for NGS
    cmds:
      - |
        nats context add \
          "NGS-Default-CLI" \
          --server "tls://connect.ngs.global" \
          --creds ./credentials/NGS-Premium-CLI.creds \
          --select